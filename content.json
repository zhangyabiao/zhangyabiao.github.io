[{"title":"1001.害死人不偿命（3n+1）猜想","date":"2016-12-06T14:34:58.000Z","path":"2016/12/06/1001-害死人不偿命（3n-1）猜想/","text":"对任何一个自然数n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把(3n+1)砍掉一半。这样一直反复砍下去，最后一定在某一步得到n=1。卡拉兹在1950年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证(3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展…… 我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过1000的正整数n，简单地数一下，需要多少步（砍几下）才能得到n=1？ 输入格式：每个测试输入包含1个测试用例，即给出自然数n的值。 输出格式：输出从n计算到1需要的步数。 输入样例：3输出样例：5 #include”iostream”using namespace std;int main() { int n, count = 0; cin &gt;&gt; n; while (n!=1) { if (n % 2 == 0) { n = n / 2; count++; } else n = 3 * n + 1; } cout &lt;&lt; count &lt;&lt; endl; return 0;}","tags":[]},{"title":"“URL和URLConnection类的用法”","date":"2016-12-06T09:23:54.000Z","path":"2016/12/06/“URL和URLConnection类的用法”/","text":"/*URL和URLConnection类的用法 通过在 URL 上调用 openConnection 方法创建连接对象。 处理设置参数和一般请求属性。 使用 connect 方法建立到远程对象的实际连接。 远程对象变为可用。远程对象的头字段和内容变为可访问。/package com.javapp.ch11;import java.io.IOException;import java.net.URL;import java.util.Scanner;public class URLConnectionTest{/* @param args*/public static void main(String[] args) {try{URL url=new URL(&quot;http://www.sohu.com/&quot;);//创建URL //通过在 URL 上调用 openConnection 方法创建连接对象。 java.net.URLConnection connection=url.openConnection(); //处理设置参数和一般请求属性 connection.setDoInput(true); connection.setDoOutput(true); //使用connection方法建立到远程对象的实际连接 connection.connect(); //远程对象变为可用 System.out.println(connection.getContentType());//返回 content-type 头字段的值。 System.out.println(connection.getContentEncoding());//返回 content-encoding 头字段的值。 System.out.println(connection.getContentLength());// 返回 content-length 头字段的值。 System.out.println(connection.getDate());//返回 date 头字段的值。 //读取内容 Scanner in= new Scanner(connection.getInputStream());//返回从此打开的连接读取的输入流。 while(in.hasNextLine()) System.out.println(in.nextLine()); }catch(IOException e){ e.printStackTrace(); }}}","tags":[]},{"title":"Hello World","date":"2016-12-06T07:29:49.336Z","path":"2016/12/06/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]